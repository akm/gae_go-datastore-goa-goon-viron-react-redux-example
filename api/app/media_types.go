// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "appengine": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/akm/gae_go-datastore-goa-goon-viron-react-redux-example/server/design
// --out=$(GOPATH)/src/github.com/akm/gae_go-datastore-goa-goon-viron-react-redux-example/server
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
	"time"
)

// Memo (default view)
//
// Identifier: application/vnd.memo+json; view=default
type Memo struct {
	// Content of memo
	Content string `form:"content" json:"content" yaml:"content" xml:"content"`
	// Time when memo is created
	CreatedAt time.Time `form:"created_at" json:"created_at" yaml:"created_at" xml:"created_at"`
	ID        string    `form:"id" json:"id" yaml:"id" xml:"id"`
	// Shared to public
	Shared bool `form:"shared" json:"shared" yaml:"shared" xml:"shared"`
	// Time when memo is updated
	UpdatedAt time.Time `form:"updated_at" json:"updated_at" yaml:"updated_at" xml:"updated_at"`
}

// Validate validates the Memo media type instance.
func (mt *Memo) Validate() (err error) {
	if mt.ID == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "id"))
	}
	if mt.Content == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "content"))
	}

	return
}

// MemoCollection is the media type for an array of Memo (default view)
//
// Identifier: application/vnd.memo+json; type=collection; view=default
type MemoCollection []*Memo

// Validate validates the MemoCollection media type instance.
func (mt MemoCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}
